#ifndef FWD_H
#define FWD_H
#include "types.h"

/* function declarations */
void applyrules(Client *c);
Bool applysizehints(Client *c, int *x, int *y, int *w, int *h, Bool interact);
void arrange(Monitor *m);
void arrangemon(Monitor *m);
void attach(Client *c);
void attachstack(Client *c);
void buttonpress(XEvent *e);
void cleanupmon(Monitor *mon);
void clearurgent(Client *c);
void clientmessage(XEvent *e);
void configure(Client *c);
void configurenotify(XEvent *e);
void configurerequest(XEvent *e);
void destroynotify(XEvent *e);
void detach(Client *c);
void detachstack(Client *c);
Monitor *dirtomon(int dir);
void drawbar(Monitor *m);
void drawbars(void);
void enternotify(XEvent *e);
void expose(XEvent *e);
void focus(Client *c);
void focusin(XEvent *e);
void focusmon(const Arg *arg);
void focusstack(const Arg *arg);
Bool getrootptr(int *x, int *y);
long getstate(Window w);
void grabbuttons(Client *c, Bool focused);
void grabkeys(void);
void incnmaster(const Arg *arg);
void keypress(XEvent *e);
void killclient(const Arg *arg);
void manage(Window w, XWindowAttributes *wa);
void mappingnotify(XEvent *e);
void maprequest(XEvent *e);
void monocle(Monitor *m);
void motionnotify(XEvent *e);
void movemouse(const Arg *arg);
Client *nexttiled(Client *c);
void pop(Client *);
void propertynotify(XEvent *e);
void quit(const Arg *arg);
Monitor *recttomon(int x, int y, int w, int h);
void resize(Client *c, int x, int y, int w, int h, Bool interact);
void resizeclient(Client *c, int x, int y, int w, int h);
void resizemouse(const Arg *arg);
void restack(Monitor *m);
Bool sendevent(Client *c, Atom proto);
void sendmon(Client *c, Monitor *m);
void setclientstate(Client *c, long state);
void setfocus(Client *c);
void setfullscreen(Client *c, Bool fullscreen);
void setlayout(const Arg *arg);
void setmfact(const Arg *arg);
void showhide(Client *c);
void spawn(const Arg *arg);
void tag(const Arg *arg);
void tagmon(const Arg *arg);
void tile(Monitor *);
void togglebar(const Arg *arg);
void togglefloating(const Arg *arg);
void toggletag(const Arg *arg);
void toggleview(const Arg *arg);
void unfocus(Client *c, Bool setfocus);
void unmanage(Client *c, Bool destroyed);
void unmapnotify(XEvent *e);
Bool updategeom(void);
void updatebarpos(Monitor *m);
void updatebars(void);
void updateclientlist(void);
void updatenumlockmask(void);
void updatesizehints(Client *c);
void updatestatus(void);
void updatewindowtype(Client *c);
void updatetitle(Client *c);
void updatewmhints(Client *c);
void view(const Arg *arg);
Client *wintoclient(Window w);
Monitor *wintomon(Window w);
int xerrordummy(Display *dpy, XErrorEvent *ee);
void zoom(const Arg *arg);

#endif
